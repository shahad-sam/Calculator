memberSearchIndex = [{"p":"calculator","c":"Calculator","l":"Calculator()","u":"%3Cinit%3E()"},{"p":"calculator","c":"Calculator","l":"checkCharBracket(String, int)","u":"checkCharBracket(java.lang.String,int)"},{"p":"calculator","c":"Calculator","l":"checkCharDec(String, int)","u":"checkCharDec(java.lang.String,int)"},{"p":"calculator","c":"Calculator","l":"checkCharNum(String, int)","u":"checkCharNum(java.lang.String,int)"},{"p":"calculator","c":"Calculator","l":"checkCharSymb(String, int)","u":"checkCharSymb(java.lang.String,int)"},{"p":"calculator","c":"Calculator","l":"checkIfNumCont(String, int)","u":"checkIfNumCont(java.lang.String,int)"},{"p":"calculator","c":"Calculator","l":"checkNegativeNumber(int, String)","u":"checkNegativeNumber(int,java.lang.String)"},{"p":"calculator","c":"Calculator","l":"checkPriority(char, char)","u":"checkPriority(char,char)"},{"p":"calculator","c":"Calculator","l":"evaluate(ArrayList<Double>, ArrayList<Character>, ArrayList<Integer>)","u":"evaluate(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)"},{"p":"calculator","c":"Calculator","l":"evaluate(double, double, char)","u":"evaluate(double,double,char)"},{"p":"calculator","c":"Calculator","l":"evaluate(String)","u":"evaluate(java.lang.String)"},{"p":"calculator","c":"Calculator","l":"fixOrder(ArrayList<Integer>, int, int)","u":"fixOrder(java.util.ArrayList,int,int)"},{"p":"calculator","c":"Calculator","l":"fraction(double[])"},{"p":"calculator","c":"Calculator","l":"multiplySelf(double, int)","u":"multiplySelf(double,int)"},{"p":"calculator","c":"Calculator","l":"newtonRoot(int, double, double)","u":"newtonRoot(int,double,double)"},{"p":"calculator","c":"Calculator","l":"outOfBounds(int, int)","u":"outOfBounds(int,int)"},{"p":"calculator","c":"Calculator","l":"power(double, double)","u":"power(double,double)"},{"p":"calculator","c":"Calculator","l":"readBrackets(String, int)","u":"readBrackets(java.lang.String,int)"},{"p":"calculator","c":"Calculator","l":"removeWhiteSpace(String)","u":"removeWhiteSpace(java.lang.String)"},{"p":"calculator","c":"Calculator","l":"roundNum(double, int)","u":"roundNum(double,int)"},{"p":"calculator","c":"Calculator","l":"sortNum(ArrayList<Double>, int, String, String)","u":"sortNum(java.util.ArrayList,int,java.lang.String,java.lang.String)"},{"p":"calculator","c":"Calculator","l":"sortOperations(ArrayList<Character>, ArrayList<Integer>, int)","u":"sortOperations(java.util.ArrayList,java.util.ArrayList,int)"},{"p":"calculator","c":"Calculator","l":"sortString(String, ArrayList<Character>, ArrayList<Double>, ArrayList<Integer>, int)","u":"sortString(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,int)"}];updateSearchResults();